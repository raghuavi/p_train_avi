name: Docs/Stats PR
on:
  schedule:
    - cron: "30 5 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write   # needed to create labels

jobs:
  docs-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Use your PAT for git so commits/PRs are authored by you
      - name: Configure git with PAT
        env:
          PAT: ${{ secrets.GH_ME_TOKEN }}
        run: |
          set -e
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${PAT}@github.com/${{ github.repository }}.git

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Generate docs/stats
        run: |
          python - <<'PY'
          from datetime import datetime, timezone
          from pathlib import Path
          Path("reports").mkdir(exist_ok=True)
          now = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M UTC")
          Path("reports/stats.md").write_text(f"# Daily Stats\n\nLast updated: {now}\n", encoding="utf-8")
          PY

      - name: Commit & push branch
        id: push
        env:
          PAT: ${{ secrets.GH_ME_TOKEN }}
        run: |
          set -e
          git checkout -B auto/docs
          git add reports/stats.md
          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes"
            exit 0
          fi
          git commit -m "docs: refresh stats"
          git push -u origin auto/docs
          echo "changed=true" >> $GITHUB_OUTPUT

      # Ensure the 'docs' label exists (use repo token)
      - name: Ensure 'docs' label
        if: steps.push.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh api -X GET repos/${{ github.repository }}/labels/docs >/dev/null 2>&1; then
            gh api -X POST repos/${{ github.repository }}/labels \
              -f name='docs' -f color='0e8a16' -f description='Documentation updates'
          fi

      # Open or update the PR (authored by you via PAT)
      - name: Create or update PR
        if: steps.push.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GH_ME_TOKEN }}
        run: |
          if gh pr view --head auto/docs >/dev/null 2>&1; then
            echo "PR already exists; updated branch."
          else
            gh pr create \
              --base main \
              --head auto/docs \
              --title "Docs: refresh stats" \
              --body "Automated update to reports/stats.md (daily)." \
              --label docs
          fi
